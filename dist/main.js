(()=>{"use strict";var n={747:(n,t,e)=>{e.d(t,{Z:()=>a});var r=e(537),i=e.n(r),o=e(645),A=e.n(o)()(i());A.push([n.id,"body {\n    background: linear-gradient(180deg, rgba(33,158,159,1) 0%, rgba(171,131,45,1) 100%);\n    height: 100vh;\n    width: 100vw;\n    padding: 0;\n    margin: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 30px;\n}\n\nheader {\n    background-color: rgba(0,0,0,0.5);\n\twidth: 100%;\n    height: 20%;\n    display: grid;\n\tgrid: 1fr / 1fr 2fr 1fr;\n\tpadding: 10px;\n}\n\n#logo {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n#logo>img {\n    width: 300px;\n}\n\n#search {\n    display: flex;\n    align-items: center;\n\tgap: 5px;\n\tmargin-top: 15px;\n}\n\n#search>input {\n\tborder: 2px solid white;\n\tborder-radius: 10px;\n\theight: 30px;\n\twidth: 150px;\n\tbackground-color: rgba(1,1,1,0.5);\n\tcolor: white;\n\tpadding-left: 5px;\n}\n\n#search>input:focus::placeholder {\n\tcolor: transparent;\n}\n\n::placeholder {\n\tcolor: whitesmoke;\n}\n\n#search>button {\n\tborder: 2px solid white;\n\tborder-radius: 10px;\n\theight: 35px;\n\tbackground: rgba(0,0,0,0);\n\tcolor: white;\n\tfont-weight: bold;\n\tcursor: pointer;\n}\n\n#search>button:hover {\n\tbackground: rgba(0,0,0,0.5);\n}\n\n#units {\n\tjustify-self: end;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n\twidth: 110px;\n\tpadding: 10px;\n}\n\n.unit {\n\tcursor: pointer;\n\twidth: 30px;\n\tmargin-left: 4px;\n}\n\n#far {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n}\n\n.current {\n    color: goldenrod;\n    font-size: 30px;\n}\n   \ninput[type=checkbox]{\n\theight: 0;\n\twidth: 0;\n\tvisibility: hidden;\n}\n\nlabel {\n\tcursor: pointer;\n\ttext-indent: -9999px;\n\twidth: 40px;\n\theight: 30px;\n\tbackground: grey;\n\tdisplay: block;\n\tborder-radius: 100px;\n\tposition: relative;\n}\n\nlabel:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 5px;\n\tleft: 5px;\n\twidth: 20px;\n\theight: 20px;\n\tbackground: #fff;\n\tborder-radius: 90px;\n\ttransition: 0.3s;\n}\n\ninput:checked + label:after {\n\tleft: calc(100% - 5px);\n\ttransform: translateX(-100%);\n}\n\n.far {\n\tdisplay: flex;\n}\n\n.far::after {\n    content: \" \\2109\";\n\tfont-size: 50%;\n\tpadding-top: 5%;\n}\n\n#temp::after {\n\tpadding-top: 10%;\n}\n\n.cel::after {\n    content: \" \\2103\";\n}\n\n#main {\n\tdisplay: grid;\n\tjustify-items: center;\n\tgap: 2px;\n\tcolor: white;\n\tborder: 4px solid white;\n\tborder-radius: 30px;\n\twidth: 300px;\n\tpadding: 20px;\n}\n\n#void {\n\twidth: 200px;\n}\n\n#city, #condition {\n\tfont-size: 20px;\n}\n\n#temp {\n\tfont-size: 80px;\n}\n\n#condition {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n#condition>div {\n\tmargin: 5px;\n}\n\n#condition>img {\n\twidth: 200px;\n\theight: 200px;\n}\n\n#low::before {\n\tcontent: 'Low:';\n\tpadding-right: 5px;\n}\n\n#high::before {\n\tcontent: 'High:';\n\tpadding-right: 5px;\n}\n\n#humidity::before {\n\tcontent: 'Humidity:';\n\tpadding-right: 5px;\n}\n\n#humidity::after {\n\tcontent: '%';\n}\n\n#footer {\n\tcolor: white;\n\ttext-align: center;\n\tposition: absolute;\n\tbottom: 0;\n}","",{version:3,sources:["webpack://./src/stylesheet.css"],names:[],mappings:"AAAA;IACI,mFAAmF;IACnF,aAAa;IACb,YAAY;IACZ,UAAU;IACV,SAAS;CACZ,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,SAAS;AACV;;AAEA;IACI,iCAAiC;CACpC,WAAW;IACR,WAAW;IACX,aAAa;CAChB,uBAAuB;CACvB,aAAa;AACd;;AAEA;CACC,aAAa;CACb,mBAAmB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;CACtB,QAAQ;CACR,gBAAgB;AACjB;;AAEA;CACC,uBAAuB;CACvB,mBAAmB;CACnB,YAAY;CACZ,YAAY;CACZ,iCAAiC;CACjC,YAAY;CACZ,iBAAiB;AAClB;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,uBAAuB;CACvB,mBAAmB;CACnB,YAAY;CACZ,yBAAyB;CACzB,YAAY;CACZ,iBAAiB;CACjB,eAAe;AAChB;;AAEA;CACC,2BAA2B;AAC5B;;AAEA;CACC,iBAAiB;IACd,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;CACf,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,eAAe;CACf,WAAW;CACX,gBAAgB;AACjB;;AAEA;CACC,aAAa;CACb,yBAAyB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;CACC,SAAS;CACT,QAAQ;CACR,kBAAkB;AACnB;;AAEA;CACC,eAAe;CACf,oBAAoB;CACpB,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,cAAc;CACd,oBAAoB;CACpB,kBAAkB;AACnB;;AAEA;CACC,WAAW;CACX,kBAAkB;CAClB,QAAQ;CACR,SAAS;CACT,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,mBAAmB;CACnB,gBAAgB;AACjB;;AAEA;CACC,sBAAsB;CACtB,4BAA4B;AAC7B;;AAEA;CACC,aAAa;AACd;;AAEA;IACI,iBAAiB;CACpB,cAAc;CACd,eAAe;AAChB;;AAEA;CACC,gBAAgB;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;CACC,aAAa;CACb,qBAAqB;CACrB,QAAQ;CACR,YAAY;CACZ,uBAAuB;CACvB,mBAAmB;CACnB,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,mBAAmB;AACpB;;AAEA;CACC,WAAW;AACZ;;AAEA;CACC,YAAY;CACZ,aAAa;AACd;;AAEA;CACC,eAAe;CACf,kBAAkB;AACnB;;AAEA;CACC,gBAAgB;CAChB,kBAAkB;AACnB;;AAEA;CACC,oBAAoB;CACpB,kBAAkB;AACnB;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,YAAY;CACZ,kBAAkB;CAClB,kBAAkB;CAClB,SAAS;AACV",sourcesContent:["body {\n    background: linear-gradient(180deg, rgba(33,158,159,1) 0%, rgba(171,131,45,1) 100%);\n    height: 100vh;\n    width: 100vw;\n    padding: 0;\n    margin: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 30px;\n}\n\nheader {\n    background-color: rgba(0,0,0,0.5);\n\twidth: 100%;\n    height: 20%;\n    display: grid;\n\tgrid: 1fr / 1fr 2fr 1fr;\n\tpadding: 10px;\n}\n\n#logo {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n#logo>img {\n    width: 300px;\n}\n\n#search {\n    display: flex;\n    align-items: center;\n\tgap: 5px;\n\tmargin-top: 15px;\n}\n\n#search>input {\n\tborder: 2px solid white;\n\tborder-radius: 10px;\n\theight: 30px;\n\twidth: 150px;\n\tbackground-color: rgba(1,1,1,0.5);\n\tcolor: white;\n\tpadding-left: 5px;\n}\n\n#search>input:focus::placeholder {\n\tcolor: transparent;\n}\n\n::placeholder {\n\tcolor: whitesmoke;\n}\n\n#search>button {\n\tborder: 2px solid white;\n\tborder-radius: 10px;\n\theight: 35px;\n\tbackground: rgba(0,0,0,0);\n\tcolor: white;\n\tfont-weight: bold;\n\tcursor: pointer;\n}\n\n#search>button:hover {\n\tbackground: rgba(0,0,0,0.5);\n}\n\n#units {\n\tjustify-self: end;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n\twidth: 110px;\n\tpadding: 10px;\n}\n\n.unit {\n\tcursor: pointer;\n\twidth: 30px;\n\tmargin-left: 4px;\n}\n\n#far {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n}\n\n.current {\n    color: goldenrod;\n    font-size: 30px;\n}\n   \ninput[type=checkbox]{\n\theight: 0;\n\twidth: 0;\n\tvisibility: hidden;\n}\n\nlabel {\n\tcursor: pointer;\n\ttext-indent: -9999px;\n\twidth: 40px;\n\theight: 30px;\n\tbackground: grey;\n\tdisplay: block;\n\tborder-radius: 100px;\n\tposition: relative;\n}\n\nlabel:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 5px;\n\tleft: 5px;\n\twidth: 20px;\n\theight: 20px;\n\tbackground: #fff;\n\tborder-radius: 90px;\n\ttransition: 0.3s;\n}\n\ninput:checked + label:after {\n\tleft: calc(100% - 5px);\n\ttransform: translateX(-100%);\n}\n\n.far {\n\tdisplay: flex;\n}\n\n.far::after {\n    content: \" \\2109\";\n\tfont-size: 50%;\n\tpadding-top: 5%;\n}\n\n#temp::after {\n\tpadding-top: 10%;\n}\n\n.cel::after {\n    content: \" \\2103\";\n}\n\n#main {\n\tdisplay: grid;\n\tjustify-items: center;\n\tgap: 2px;\n\tcolor: white;\n\tborder: 4px solid white;\n\tborder-radius: 30px;\n\twidth: 300px;\n\tpadding: 20px;\n}\n\n#void {\n\twidth: 200px;\n}\n\n#city, #condition {\n\tfont-size: 20px;\n}\n\n#temp {\n\tfont-size: 80px;\n}\n\n#condition {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n#condition>div {\n\tmargin: 5px;\n}\n\n#condition>img {\n\twidth: 200px;\n\theight: 200px;\n}\n\n#low::before {\n\tcontent: 'Low:';\n\tpadding-right: 5px;\n}\n\n#high::before {\n\tcontent: 'High:';\n\tpadding-right: 5px;\n}\n\n#humidity::before {\n\tcontent: 'Humidity:';\n\tpadding-right: 5px;\n}\n\n#humidity::after {\n\tcontent: '%';\n}\n\n#footer {\n\tcolor: white;\n\ttext-align: center;\n\tposition: absolute;\n\tbottom: 0;\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&A[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),A=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(A).concat([o]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var o={},A=[],a=0;a<n.length;a++){var c=n[a],d=r.base?c[0]+r.base:c[0],s=o[d]||0,p="".concat(d," ").concat(s);o[d]=s+1;var l=e(p),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)t[l].references++,t[l].updater(C);else{var u=i(C,r);r.byIndex=a,t.splice(a,0,{identifier:p,updater:u,references:1})}A.push(p)}return A}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var A=0;A<o.length;A++){var a=e(o[A]);t[a].references--}for(var c=r(n,i),d=0;d<o.length;d++){var s=e(o[d]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}o=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,i&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,exports:{}};return n[r](o,o.exports,e),o.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),i=e.n(r),o=e(569),A=e.n(o),a=e(565),c=e.n(a),d=e(216),s=e.n(d),p=e(589),l=e.n(p),C=e(747),u={};u.styleTagTransform=l(),u.setAttributes=c(),u.insert=A().bind(null,"head"),u.domAPI=i(),u.insertStyleElement=s(),t()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals,e.p;const f=(()=>{const n=document.getElementById("slider"),t=document.getElementById("far"),e=document.getElementById("cel"),r=document.querySelectorAll(".unit");function i(){const r=document.querySelectorAll(".far");n.checked?(t.classList.remove("current"),e.classList.add("current"),r.forEach((n=>{n.classList.add("cel")})),A(r)):(e.classList.remove("current"),t.classList.add("current"),r.forEach((n=>{n.classList.remove("cel")})),A(r))}function o(e){(e.target||t).classList.contains("current")||(r.forEach((n=>{n.classList.remove("current")})),e.target===t?n.checked=!1:n.checked=!0,e.target.classList.add("current"),i())}function A(n){n.forEach((n=>{let t,e=n.textContent.replace(/\D/g,"");n.classList.contains("cel")?(e=n.textContent.replace(/\D/g,""),t=.5556*(e-32),n.textContent=Math.round(t)):(e=n.textContent.replace(/\D/g,""),t=1.8*e+32,n.textContent=Math.round(t))}))}return n.addEventListener("click",i),t.addEventListener("click",o),e.addEventListener("click",o),{farSpan:t,celSpan:e,resetSlider:function(){t.classList.contains("current")||(e.classList.remove("current"),t.classList.add("current"),n.checked=!1)}}})(),h=e.p+"105c9478b8ee75eb07eb.svg",g=e.p+"f2ba3c3a1d609eb76f76.svg",m=e.p+"171608ef842a223bb160.svg",B=e.p+"2a0fbf52cdbc2ad96827.svg",x=e.p+"f8d7125d9e6a68293cdb.svg",b=e.p+"0eda650396d5bdf10fc2.svg",v=e.p+"2c0fedc27d2b210f66c3.svg",y=e.p+"b06768a2062e93a4c3cd.svg",w=(()=>{const n=document.querySelector("input"),t=document.querySelector("button"),e=document.getElementById("main");t.addEventListener("click",i);let r={};async function i(t){let i=n.value||t;try{let n;if(f.farSpan.classList.contains("current")){let t=await fetch("https://api.openweathermap.org/data/2.5/weather?q="+i+"&units=imperial&appid=256f2fb92e7b31de1dd3240fad6d6f0e",{mode:"cors"});n=await t.json()}else{let t=await fetch("https://api.openweathermap.org/data/2.5/weather?q="+i+"&units=metric&appid=256f2fb92e7b31de1dd3240fad6d6f0e",{mode:"cors"});n=await t.json()}r.city=n.name,r.temp=Math.round(n.main.temp),r.condition=n.weather[0].main,r.low=Math.round(n.main.temp_min),r.high=Math.round(n.main.temp_max),r.humidity=Math.round(n.main.humidity),A(),function(){for(let n in r)o(r[n],n)}()}catch(n){console.log(n),A(),function(){const n=document.createElement("img");(async function(){const t=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=slDqQ2cL7ZADYT3tCrAM7VBef2YfRFvY&s=void",{mode:"cors"}),e=await t.json();n.src=e.data.images.original.url,n.id="void"})(),e.appendChild(n);let t=document.createElement("div");t.id="error",t.textContent="You have left the bounds of space and time. Please enter a valid city name.",e.appendChild(t)}()}}function o(n,t){let r=document.createElement("div");if(r.id=t,"temp"===t||"low"===t||"high"===t)r.classList.add("far"),r.textContent=n,f.celSpan.classList.contains("current")&&r.classList.add("cel");else if("condition"===t){r.appendChild(function(n){const t=new Image;return"Clear"===n?(t.src=h,t):"Clouds"===n?(t.src=g,t):"Rain"===n?(t.src=B,t):"Drizzle"===n?(t.src=m,t):"Snow"===n?(t.src=b,t):"Thunderstrom"===n?(t.src=x,t):"Tornado"===n?(t.src=y,t):(t.src=v,t)}(n));let t=document.createElement("div");t.textContent=n,r.appendChild(t)}else r.textContent=n;e.appendChild(r)}function A(){for(n.value="";e.firstChild;)e.removeChild(e.firstChild)}return{getWeather:i}})();window.onload=w.getWeather("los angeles")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,