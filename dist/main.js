(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var c=n.getElementsByTagName("script");c.length&&(t=c[c.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),(()=>{const e=document.getElementById("slider"),t=document.getElementById("far"),n=document.getElementById("cel"),c=document.querySelectorAll(".unit");function r(){const c=document.querySelectorAll(".far");e.checked?(t.classList.remove("current"),n.classList.add("current"),c.forEach((e=>{e.classList.add("cel")})),i(c)):(n.classList.remove("current"),t.classList.add("current"),c.forEach((e=>{e.classList.remove("cel")})),i(c))}function a(n){n.target.classList.contains("current")||(c.forEach((e=>{e.classList.remove("current")})),n.target===t?e.checked=!1:e.checked=!0,n.target.classList.add("current"),r())}function i(e){e.forEach((e=>{let t,n=e.textContent.replace(/\D/g,"");e.classList.contains("cel")?(n=e.textContent.replace(/\D/g,""),t=.5556*(n-32),e.textContent=Math.round(t)):(n=e.textContent.replace(/\D/g,""),t=1.8*n+32,e.textContent=Math.round(t))}))}e.addEventListener("click",r),t.addEventListener("click",a),n.addEventListener("click",a)})();const t=e.p+"105c9478b8ee75eb07eb.svg",n=e.p+"f2ba3c3a1d609eb76f76.svg",c=e.p+"171608ef842a223bb160.svg",r=e.p+"2a0fbf52cdbc2ad96827.svg",a=e.p+"f8d7125d9e6a68293cdb.svg",i=e.p+"0eda650396d5bdf10fc2.svg",o=e.p+"2c0fedc27d2b210f66c3.svg",s=e.p+"b06768a2062e93a4c3cd.svg",d=(()=>{const e=document.querySelector("input"),d=document.querySelector("button"),l=document.getElementById("main");d.addEventListener("click",m);let u={};async function m(t){let n=e.value||t;try{let e=await fetch("https://api.openweathermap.org/data/2.5/weather?q="+n+"&units=imperial&appid=256f2fb92e7b31de1dd3240fad6d6f0e",{mode:"cors"}),t=await e.json();u.city=t.name,u.temp=Math.round(t.main.temp),u.condition=t.weather[0].main,u.low=Math.round(t.main.temp_min),u.high=Math.round(t.main.temp_max),u.humidity=Math.round(t.main.humidity),console.log(u),f(),function(){for(let e in u)p(u[e],e)}()}catch(e){f(),function(){const e=document.createElement("img");(async function(){const t=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=slDqQ2cL7ZADYT3tCrAM7VBef2YfRFvY&s=void",{mode:"cors"}),n=await t.json();e.src=n.data.images.original.url,e.id="void"})(),l.appendChild(e);let t=document.createElement("div");t.id="error",t.textContent="You have left the bounds of space and time. Please enter a valid city name.",l.appendChild(t)}()}}function p(e,t){let n=document.createElement("div");if(n.id=t,"temp"===t||"low"===t||"high"===t)n.classList.add("far"),n.textContent=e;else if("condition"===t){n.appendChild(h(e)),console.log(h(e));let t=document.createElement("div");t.textContent=e,n.appendChild(t)}else n.textContent=e;l.appendChild(n)}function f(){for(e.value="";l.firstChild;)l.removeChild(l.firstChild)}function h(e){const d=new Image;return"Clear"===e?(d.src=t,d):"Clouds"===e?(d.src=n,d):"Rain"===e?(d.src=r,d):"Drizzle"===e?(d.src=c,d):"Snow"===e?(d.src=i,d):"Thunderstrom"===e?(d.src=a,d):"Tornado"===e?(d.src=s,d):(d.src=o,d)}return{getWeather:m}})();window.onload=d.getWeather("los angeles")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QnlCLEVBQUlELFlBQVlJLFFBRWhCSCxFQUFJMUMsWUFBY2lCLEVBR3RCVCxFQUFLaUMsWUFBWUMsR0FHckIsU0FBU2QsSUFHTCxJQUZBdkIsRUFBTVEsTUFBUSxHQUVQTCxFQUFLc0MsWUFDUnRDLEVBQUt1QyxZQUFZdkMsRUFBS3NDLFlBSTlCLFNBQVNGLEVBQVczQixHQUNoQixNQUFNK0IsRUFBTyxJQUFJQyxNQUVqQixNQUFhLFVBQVRoQyxHQUNBK0IsRUFBSzNFLElBQU0sRUFDSjJFLEdBQ1MsV0FBVC9CLEdBQ1ArQixFQUFLM0UsSUFBTSxFQUNKMkUsR0FDUyxTQUFUL0IsR0FDUCtCLEVBQUszRSxJQUFNLEVBQ0oyRSxHQUNTLFlBQVQvQixHQUNQK0IsRUFBSzNFLElBQU0sRUFDSjJFLEdBQ1MsU0FBVC9CLEdBQ1ArQixFQUFLM0UsSUFBTSxFQUNKMkUsR0FDUyxpQkFBVC9CLEdBQ1ArQixFQUFLM0UsSUFBTSxFQUNKMkUsR0FDUyxZQUFUL0IsR0FDUCtCLEVBQUszRSxJQUFNLEVBQ0oyRSxJQUVQQSxFQUFLM0UsSUFBTSxFQUNKMkUsR0ErQmYsTUFBTyxDQUFDdkMsV0FBQUEsSUF0SFcsR0NQdkIxQyxPQUFPbUYsT0FBUzlDLEVBQVFLLFdBQVcsZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3NsaWRlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy93ZWF0aGVyLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiZXhwb3J0IGNvbnN0IHNsaWRlciA9ICgoKSA9PntcbiAgICBjb25zdCBzbGlkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2xpZGVyJyk7XG4gICAgY29uc3QgZmFyU3BhbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmYXInKTtcbiAgICBjb25zdCBjZWxTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NlbCcpO1xuICAgIGNvbnN0IHVuaXRFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy51bml0Jyk7XG5cblxuICAgIHNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZVVuaXRzKTtcbiAgICBmYXJTcGFuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2V0VW5pdHMpO1xuICAgIGNlbFNwYW4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZXRVbml0cyk7XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVVbml0cygpIHtcbiAgICAgICAgY29uc3QgZmFyRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZmFyJyk7XG5cbiAgICAgICAgaWYgKHNsaWRlci5jaGVja2VkKSB7XG4gICAgICAgICAgICBmYXJTcGFuLmNsYXNzTGlzdC5yZW1vdmUoJ2N1cnJlbnQnKTtcbiAgICAgICAgICAgIGNlbFNwYW4uY2xhc3NMaXN0LmFkZCgnY3VycmVudCcpO1xuXG4gICAgICAgICAgICBmYXJFbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcbiAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKCdjZWwnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb252ZXJ0VGVtcChmYXJFbGVtZW50cyk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNlbFNwYW4uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudCcpO1xuICAgICAgICAgICAgZmFyU3Bhbi5jbGFzc0xpc3QuYWRkKCdjdXJyZW50Jyk7XG5cbiAgICAgICAgICAgIGZhckVsZW1lbnRzLmZvckVhY2goZWwgPT4ge1xuICAgICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoJ2NlbCcpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnZlcnRUZW1wKGZhckVsZW1lbnRzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldFVuaXRzKGUpIHtcbiAgICAgICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjdXJyZW50JykpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHVuaXRFbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcbiAgICAgICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKCdjdXJyZW50Jyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ID09PSBmYXJTcGFuKSB7XG4gICAgICAgICAgICAgICAgc2xpZGVyLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2xpZGVyLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdjdXJyZW50Jyk7XG4gICAgICAgICAgICB0b2dnbGVVbml0cygpOyAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUZW1wKGZhckVsZW1lbnRzKSB7XG5cbiAgICAgICAgZmFyRWxlbWVudHMuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgICAgICBsZXQgdGVtcCA9IGVsLnRleHRDb250ZW50LnJlcGxhY2UoL1xcRC9nLCAnJyk7XG4gICAgICAgICAgICBsZXQgbmV3VGVtcDtcblxuICAgICAgICAgICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnY2VsJykpIHtcbiAgICAgICAgICAgICAgICB0ZW1wID0gZWwudGV4dENvbnRlbnQucmVwbGFjZSgvXFxEL2csICcnKTtcbiAgICAgICAgICAgICAgICBuZXdUZW1wID0gKHRlbXAgLSAzMikgKiAuNTU1NjtcbiAgICAgICAgICAgICAgICBlbC50ZXh0Q29udGVudCA9IE1hdGgucm91bmQobmV3VGVtcCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRlbXAgPSBlbC50ZXh0Q29udGVudC5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgICAgICAgICAgICAgIG5ld1RlbXAgPSAodGVtcCAqIDEuOCkgKyAzMjtcbiAgICAgICAgICAgICAgICBlbC50ZXh0Q29udGVudCA9IE1hdGgucm91bmQobmV3VGVtcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfVxufSkoKTsiLCJpbXBvcnQge3NsaWRlcn0gZnJvbSAnLi9zbGlkZXIuanMnO1xuaW1wb3J0IENsZWFyIGZyb20gJy4uL2ltYWdlcy9jbGVhci1kYXkuc3ZnJztcbmltcG9ydCBDbG91ZHMgZnJvbSAnLi4vaW1hZ2VzL2Nsb3Vkcy5zdmcnO1xuaW1wb3J0IERyaXp6bGUgZnJvbSAnLi4vaW1hZ2VzL2RyaXp6bGUuc3ZnJztcbmltcG9ydCBSYWluIGZyb20gJy4uL2ltYWdlcy9yYWluLnN2Zyc7XG5pbXBvcnQgVGh1bmRlcnN0b3JtIGZyb20gJy4uL2ltYWdlcy90aHVuZGVyc3Rvcm0uc3ZnJztcbmltcG9ydCBTbm93IGZyb20gJy4uL2ltYWdlcy9zbm93LnN2Zyc7XG5pbXBvcnQgRm9nIGZyb20gJy4uL2ltYWdlcy9mb2cuc3ZnJztcbmltcG9ydCBUb3JuYWRvIGZyb20gJy4uL2ltYWdlcy90b3JuYWRvLnN2Zyc7XG5cbmV4cG9ydCBjb25zdCB3ZWF0aGVyID0gKCgpID0+IHtcblxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdidXR0b24nKTtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKTtcblxuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldFdlYXRoZXIpO1xuXG4gICAgbGV0IHdlYXRoZXJEYXRhID0ge307XG5cbiAgICBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyKGxvY2F0aW9uKSB7XG4gICAgICAgIGxldCBjaXR5ID0gaW5wdXQudmFsdWUgfHwgbG9jYXRpb247XG4gICAgICAgIFxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JyArIGNpdHkgKyAnJnVuaXRzPWltcGVyaWFsJmFwcGlkPTI1NmYyZmI5MmU3YjMxZGUxZGQzMjQwZmFkNmQ2ZjBlJywge21vZGU6ICdjb3JzJ30pO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgd2VhdGhlckRhdGEuY2l0eSA9IGRhdGEubmFtZTtcbiAgICAgICAgICAgIHdlYXRoZXJEYXRhLnRlbXAgPSBNYXRoLnJvdW5kKGRhdGEubWFpbi50ZW1wKTtcbiAgICAgICAgICAgIHdlYXRoZXJEYXRhLmNvbmRpdGlvbiA9IGRhdGEud2VhdGhlclswXS5tYWluO1xuICAgICAgICAgICAgd2VhdGhlckRhdGEubG93ID0gTWF0aC5yb3VuZChkYXRhLm1haW4udGVtcF9taW4pO1xuICAgICAgICAgICAgd2VhdGhlckRhdGEuaGlnaCA9IE1hdGgucm91bmQoZGF0YS5tYWluLnRlbXBfbWF4KVxuICAgICAgICAgICAgd2VhdGhlckRhdGEuaHVtaWRpdHkgPSBNYXRoLnJvdW5kKGRhdGEubWFpbi5odW1pZGl0eSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh3ZWF0aGVyRGF0YSk7XG4gICAgICAgICAgICBjbGVhcigpO1xuICAgICAgICAgICAgcmVuZGVyV2VhdGhlcigpO1xuICAgICAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICAgICAgICBjbGVhcigpO1xuICAgICAgICAgICAgcmVuZGVyRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZURpdihkYXRhLCBwcm9wKSB7XG4gICAgICAgIGxldCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZGl2LmlkID0gcHJvcDtcblxuICAgICAgICBpZiAocHJvcCA9PT0gJ3RlbXAnIHx8IHByb3AgPT09ICdsb3cnIHx8IHByb3AgPT09ICdoaWdoJykge1xuICAgICAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ2ZhcicpO1xuICAgICAgICAgICAgZGl2LnRleHRDb250ZW50ID0gZGF0YTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAnY29uZGl0aW9uJykge1xuICAgICAgICAgICAgZGl2LmFwcGVuZENoaWxkKGFwcGVuZEljb24oZGF0YSkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYXBwZW5kSWNvbihkYXRhKSk7XG4gICAgICAgICAgICBsZXQgc3ViRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBzdWJEaXYudGV4dENvbnRlbnQgPSBkYXRhO1xuICAgICAgICAgICAgZGl2LmFwcGVuZENoaWxkKHN1YkRpdik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkaXYudGV4dENvbnRlbnQgPSBkYXRhO1xuICAgICAgICB9XG5cbiAgICAgICAgbWFpbi5hcHBlbmRDaGlsZChkaXYpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgICBpbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICAgIHdoaWxlIChtYWluLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIG1haW4ucmVtb3ZlQ2hpbGQobWFpbi5maXJzdENoaWxkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFwcGVuZEljb24oZGF0YSkge1xuICAgICAgICBjb25zdCBpY29uID0gbmV3IEltYWdlKCk7XG5cbiAgICAgICAgaWYgKGRhdGEgPT09ICdDbGVhcicpIHtcbiAgICAgICAgICAgIGljb24uc3JjID0gQ2xlYXI7XG4gICAgICAgICAgICByZXR1cm4gaWNvbjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhID09PSAnQ2xvdWRzJykge1xuICAgICAgICAgICAgaWNvbi5zcmMgPSBDbG91ZHM7XG4gICAgICAgICAgICByZXR1cm4gaWNvbjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhID09PSAnUmFpbicpIHtcbiAgICAgICAgICAgIGljb24uc3JjID0gUmFpbjtcbiAgICAgICAgICAgIHJldHVybiBpY29uO1xuICAgICAgICB9IGVsc2UgaWYgKGRhdGEgPT09ICdEcml6emxlJykge1xuICAgICAgICAgICAgaWNvbi5zcmMgPSBEcml6emxlO1xuICAgICAgICAgICAgcmV0dXJuIGljb247XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0YSA9PT0gJ1Nub3cnKSB7XG4gICAgICAgICAgICBpY29uLnNyYyA9IFNub3c7XG4gICAgICAgICAgICByZXR1cm4gaWNvbjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhID09PSAnVGh1bmRlcnN0cm9tJykge1xuICAgICAgICAgICAgaWNvbi5zcmMgPSBUaHVuZGVyc3Rvcm07XG4gICAgICAgICAgICByZXR1cm4gaWNvbjtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhID09PSAnVG9ybmFkbycpIHtcbiAgICAgICAgICAgIGljb24uc3JjID0gVG9ybmFkbztcbiAgICAgICAgICAgIHJldHVybiBpY29uO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWNvbi5zcmMgPSBGb2c7XG4gICAgICAgICAgICByZXR1cm4gaWNvbjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlcldlYXRoZXIoKSB7XG4gICAgICAgIGZvciAobGV0IHByb3AgaW4gd2VhdGhlckRhdGEpIHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IHdlYXRoZXJEYXRhW3Byb3BdO1xuICAgICAgICAgICAgY3JlYXRlRGl2KHZhbHVlLCBwcm9wKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlckVycm9yKCkge1xuICAgICAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcblxuICAgICAgICBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVZvaWQoKSB7XG4gICAgICAgICAgICBsZXQgdXJsID0gJ2h0dHBzOi8vYXBpLmdpcGh5LmNvbS92MS9naWZzL3RyYW5zbGF0ZT9hcGlfa2V5PXNsRHFRMmNMN1pBRFlUM3RDckFNN1ZCZWYyWWZSRnZZJnM9dm9pZCc7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge21vZGU6ICdjb3JzJ30pO1xuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICBpbWcuc3JjID0gaW1hZ2UuZGF0YS5pbWFnZXMub3JpZ2luYWwudXJsO1xuICAgICAgICAgICAgaW1nLmlkID0gJ3ZvaWQnO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2VuZXJhdGVWb2lkKCk7XG4gICAgICAgIG1haW4uYXBwZW5kQ2hpbGQoaW1nKTtcblxuICAgICAgICBsZXQgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRpdi5pZCA9ICdlcnJvcic7XG4gICAgICAgIGRpdi50ZXh0Q29udGVudCA9IFwiWW91IGhhdmUgbGVmdCB0aGUgYm91bmRzIG9mIHNwYWNlIGFuZCB0aW1lLiBQbGVhc2UgZW50ZXIgYSB2YWxpZCBjaXR5IG5hbWUuXCI7XG4gICAgICAgIG1haW4uYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge2dldFdlYXRoZXJ9XG59KSgpOyIsImltcG9ydCB7d2VhdGhlcn0gZnJvbSAnLi4vc3JjL3dlYXRoZXInO1xuaW1wb3J0IHtzbGlkZXJ9IGZyb20gJy4uL3NyYy9zbGlkZXIuanMnO1xuXG53aW5kb3cub25sb2FkID0gd2VhdGhlci5nZXRXZWF0aGVyKCdsb3MgYW5nZWxlcycpOyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZyIsImdsb2JhbFRoaXMiLCJ0aGlzIiwiRnVuY3Rpb24iLCJlIiwid2luZG93Iiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsInNsaWRlciIsImdldEVsZW1lbnRCeUlkIiwiZmFyU3BhbiIsImNlbFNwYW4iLCJ1bml0RWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidG9nZ2xlVW5pdHMiLCJmYXJFbGVtZW50cyIsImNoZWNrZWQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJmb3JFYWNoIiwiZWwiLCJjb252ZXJ0VGVtcCIsInNldFVuaXRzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJuZXdUZW1wIiwidGVtcCIsInRleHRDb250ZW50IiwiTWF0aCIsInJvdW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndlYXRoZXIiLCJpbnB1dCIsInF1ZXJ5U2VsZWN0b3IiLCJidXR0b24iLCJtYWluIiwiZ2V0V2VhdGhlciIsIndlYXRoZXJEYXRhIiwiYXN5bmMiLCJjaXR5IiwidmFsdWUiLCJyZXNwb25zZSIsImZldGNoIiwibW9kZSIsImRhdGEiLCJqc29uIiwibmFtZSIsImNvbmRpdGlvbiIsImxvdyIsInRlbXBfbWluIiwiaGlnaCIsInRlbXBfbWF4IiwiaHVtaWRpdHkiLCJjb25zb2xlIiwibG9nIiwiY2xlYXIiLCJwcm9wIiwiY3JlYXRlRGl2IiwicmVuZGVyV2VhdGhlciIsImVycm9yIiwiaW1nIiwiY3JlYXRlRWxlbWVudCIsImltYWdlIiwiaW1hZ2VzIiwib3JpZ2luYWwiLCJ1cmwiLCJpZCIsImdlbmVyYXRlVm9pZCIsImFwcGVuZENoaWxkIiwiZGl2IiwicmVuZGVyRXJyb3IiLCJhcHBlbmRJY29uIiwic3ViRGl2IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiaWNvbiIsIkltYWdlIiwib25sb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==