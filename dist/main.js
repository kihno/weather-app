(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var c=n.getElementsByTagName("script");c.length&&(t=c[c.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=(()=>{const e=document.getElementById("slider"),t=document.getElementById("far"),n=document.getElementById("cel"),c=document.querySelectorAll(".unit");function a(){const c=document.querySelectorAll(".far");e.checked?(t.classList.remove("current"),n.classList.add("current"),c.forEach((e=>{e.classList.add("cel")})),i(c)):(n.classList.remove("current"),t.classList.add("current"),c.forEach((e=>{e.classList.remove("cel")})),i(c))}function r(n){(n.target||t).classList.contains("current")||(c.forEach((e=>{e.classList.remove("current")})),n.target===t?e.checked=!1:e.checked=!0,n.target.classList.add("current"),a())}function i(e){e.forEach((e=>{let t,n=e.textContent.replace(/\D/g,"");e.classList.contains("cel")?(n=e.textContent.replace(/\D/g,""),t=.5556*(n-32),e.textContent=Math.round(t)):(n=e.textContent.replace(/\D/g,""),t=1.8*n+32,e.textContent=Math.round(t))}))}return e.addEventListener("click",a),t.addEventListener("click",r),n.addEventListener("click",r),{farSpan:t,celSpan:n,resetSlider:function(){t.classList.contains("current")||(n.classList.remove("current"),t.classList.add("current"),e.checked=!1)}}})(),n=e.p+"105c9478b8ee75eb07eb.svg",c=e.p+"f2ba3c3a1d609eb76f76.svg",a=e.p+"171608ef842a223bb160.svg",r=e.p+"2a0fbf52cdbc2ad96827.svg",i=e.p+"f8d7125d9e6a68293cdb.svg",s=e.p+"0eda650396d5bdf10fc2.svg",o=e.p+"2c0fedc27d2b210f66c3.svg",d=e.p+"b06768a2062e93a4c3cd.svg",l=(()=>{const e=document.querySelector("input"),l=document.querySelector("button"),u=document.getElementById("main");document.querySelectorAll(".far"),document.getElementById("temp"),l.addEventListener("click",p);let m={};async function p(n){let c=e.value||n;try{let e;if(t.farSpan.classList.contains("current")){let t=await fetch("https://api.openweathermap.org/data/2.5/weather?q="+c+"&units=imperial&appid=256f2fb92e7b31de1dd3240fad6d6f0e",{mode:"cors"});e=await t.json()}else{let t=await fetch("https://api.openweathermap.org/data/2.5/weather?q="+c+"&units=metric&appid=256f2fb92e7b31de1dd3240fad6d6f0e",{mode:"cors"});e=await t.json()}m.city=e.name,m.temp=Math.round(e.main.temp),m.condition=e.weather[0].main,m.low=Math.round(e.main.temp_min),m.high=Math.round(e.main.temp_max),m.humidity=Math.round(e.main.humidity),h(),function(){for(let e in m)f(m[e],e)}()}catch(e){console.log(e),h(),function(){const e=document.createElement("img");(async function(){const t=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=slDqQ2cL7ZADYT3tCrAM7VBef2YfRFvY&s=void",{mode:"cors"}),n=await t.json();e.src=n.data.images.original.url,e.id="void"})(),u.appendChild(e);let t=document.createElement("div");t.id="error",t.textContent="You have left the bounds of space and time. Please enter a valid city name.",u.appendChild(t)}()}}function f(e,l){let m=document.createElement("div");if(m.id=l,"temp"===l||"low"===l||"high"===l)m.classList.add("far"),m.textContent=e,t.celSpan.classList.contains("current")&&m.classList.add("cel");else if("condition"===l){m.appendChild(function(e){const t=new Image;return"Clear"===e?(t.src=n,t):"Clouds"===e?(t.src=c,t):"Rain"===e?(t.src=r,t):"Drizzle"===e?(t.src=a,t):"Snow"===e?(t.src=s,t):"Thunderstrom"===e?(t.src=i,t):"Tornado"===e?(t.src=d,t):(t.src=o,t)}(e));let t=document.createElement("div");t.textContent=e,m.appendChild(t)}else m.textContent=e;u.appendChild(m)}function h(){for(e.value="";u.firstChild;)u.removeChild(u.firstChild)}return{getWeather:p}})();window.onload=l.getWeather("los angeles")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,